/// <reference types="pickadate" />
import { ElementRef, AfterViewInit, OnDestroy, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { MdInput } from '@angular/material';
import './shared/picker.date';
export declare class PickadateComponent implements AfterViewInit, OnDestroy, ControlValueAccessor {
    private changeDetector;
    private el;
    design: string;
    modelFormat: string;
    format: string;
    locale: string;
    disabled: boolean;
    disabledDates: any;
    min: Pickadate.MinOrMaxDateOption;
    max: Pickadate.MinOrMaxDateOption;
    placeholder: string;
    onOpen: EventEmitter<void>;
    onClose: EventEmitter<void>;
    onSelect: EventEmitter<Date>;
    inputRef: ElementRef;
    inputRefMaterial: MdInput;
    private input;
    private _value;
    private propagateChange;
    private datepicker;
    private initialized;
    constructor(changeDetector: ChangeDetectorRef, el: ElementRef);
    onClick(event: any): void;
    ngAfterViewInit(): any;
    ngAfterViewChecked(): void;
    ngOnChanges(): void;
    ngOnDestroy(): void;
    writeValue(value: string): void;
    registerOnChange(fn: any): void;
    registerOnTouched(): void;
    private findInputElement();
    private registerListeners();
    value: string;
    private setDatepickerValue(val);
    readonly options: Pickadate.DateOptions;
}
